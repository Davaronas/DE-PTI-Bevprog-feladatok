#include "std_lib_facilities.h"

int main()
try {
	int X = 0;		

	// 1.
	cout << "1.Success!\n"; 
	
	
	
	// 2.
	cout << "2.Success!\n";
	
		

	// 3.
	cout << "3.Success!\n";

						
	
	// 4.
	cout << "4.Success!"<< '\n'; 

		

	// 5.
	string res = "7"; 
	vector<int> v;
	v.push_back(stoi(res));
	cout << "5.Success!\n";

	

	//6.
	vector<int> v2;
	v2.resize(10);
	v2[5] = 7; 
	if (v2[5] = 7) 
	{
		cout << "6.Success!\n";
	}
	
	
	// 7.
	bool cond = true;
	if (cond) 
	{ 
		cout << "7.Success!\n";
	}
 	else cout << "Fail!\n";
	

	// 8.
	bool a = true;
	if (a)
 	{
		cout << "8.Success!\n";
	}
	else cout << "Fail!\n";
	

	// 9.
	string s = "ape";
	bool b = true ;
	if (b) 
	cout << "9.Success!\n";
	

	// 10.
	string s2 = "ape";
	if (s2 != "fool")
	{ 
		cout << "10.Success!\n";
	}
	

	// 11.
	string s3 = "ape";
 	if (s3 != "fool") 
	cout << "11.Success!\n";
	

	// 12.
	string s4 = "ape";
 	if (s4 != "fool") 
	cout << "12.Success!\n";
	

	// 13.
	vector<char> v3(5);
 	for (int i=0; v3.size() > 0; ++i)
	{ 
	cout << "13.Success!\n";
	v3.resize(0);
	}
	

	// 14.
	vector<char> v4(5);
 	for (int i=5; i<=v4.size(); ++i) 	
 	cout << "14.Success!\n";
	

	// 15.
	vector<string> s5(1);
	s5[0] = "15.Success!\n";
 	for (int i=0; i<1; ++i)
	cout << s5[i];
	

	// 16.
	if (true) cout << "16.Success!\n"; else cout << "Fail!\n";
	

	// 17.
	int x = 2000;
	int c = x; 
	if (c == 2000 ) 
	cout << "17.Success!\n";		
	

	// 18.
	string s6 = "18.Success!\n";
	for (int i=0; i<1; ++i) 
	cout << s6;
	

	// 19.
	vector<int> v5(0); 
	for (int i=0; i<=v5.size(); ++i) 
 	cout << "19.Success!\n";
	

	// 20.
	int i=11;
 	int j = 9; 
	while (j<10)
	++j;
	if (j<i) 
	cout << "20.Success!\n";
	

	// 21.
	double x2 = 2;
 	double d = 5/x2;
	if (d==x2+0.5)
	cout << "21.Success!\n";
	

	// 22.
	vector<string> s7(1);
	s7[0] = "22.Success!\n";
	for (int i=0; i<1; ++i) 
	cout << s7[i];
	

	// 23.
	int i2=0;
	int j2=0;
	while (i2<1) 
	++i2; 
	if (j2<i2) 
	cout << "23.Success!\n";
	

	// 24.
	double x3 = 4;
	double d2 = 5/(x3-2);
	if (d2 == 0.5*x3+0.5)
	cout << "24.Succes!\n";

	// 25.
	cout << "25.Success!\n";
	
	



	



	cout << X << "\n";	
	
	keep_window_open();
	return 0;
}
	catch (exception& e) {
	cerr << "error: " << e.what() << '\n';
	keep_window_open();
	return 1;
}
	catch (...) {
	cerr << "Oops: unknown exception!\n";
	keep_window_open();
	return 2;
}
